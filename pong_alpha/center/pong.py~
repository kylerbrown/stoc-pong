# PONG.PY 

import pyglet
from game import constants, resources, player, ball, geometry

# initialize window
gameWindow = pyglet.window.Window(vsync=True)

# get game constants
values = constants.Constants(gameWindow)
geom = geometry.Geometry(values)

# initialize batches
mainBatch = pyglet.graphics.Batch()		# the permanent game elements
altBatch = pyglet.graphics.Batch()		#  a holding batch for elements
										#  (not drawn)

# define game elements
# initialize paddle path
paddlePath = pyglet.sprite.Sprite(img=resources.path_image,
									x=values.centerX,
									y=values.centerY,
									batch=mainBatch)

paddlePath.scale = values.pathScale

# ball
pongBall = ball.Ball(constants=values,geometry=geom,batch=mainBatch)
pongBall.scale = values.ballScale
# paddle
playerPaddle = player.Player(constants=values,geometry=geom,batch=mainBatch)
playerPaddle.scale = values.paddleScale
# center marker
centerMark = pyglet.sprite.Sprite(img=resources.marker_image,
									x=values.centerX,
									y=values.centerY,
									batch=mainBatch)
centerMark.scale = values.markerScale

# push key handlers
gameWindow.push_handlers(playerPaddle.key_handler)

# Paint screen
@gameWindow.event
def on_draw():
    # clear screen
    gameWindow.clear()
    # draw game elements
    mainBatch.draw()

def update(dt):
	playerPaddle.update(dt,values)					# update paddle
	pongBall.update(dt,playerPaddle,values)			# update ball
    
# Run the code
if __name__ == '__main__':
	# schedule the update function at 200 Hz
	pyglet.clock.schedule_interval(update,1/200.0)
    # run pyglet
	pyglet.app.run()
